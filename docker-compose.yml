services:
  mcp-cldmemory-server:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: mcp-cldmemory-server
    ports:
      - "${MCP_PORT:-3000}:3000"
    environment:
      - NODE_ENV=${NODE_ENV:-production}
      - QDRANT_URL=http://mcp-cldmemory-qdrant:6333
      - QDRANT_API_KEY=${QDRANT_API_KEY:-}
      - QDRANT_COLLECTION_NAME=${QDRANT_COLLECTION_NAME:-human_memories}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENAI_MODEL=${OPENAI_MODEL:-text-embedding-3-small}
      - MCP_TRANSPORT_MODE=${MCP_TRANSPORT_MODE:-sse}
      - MCP_PORT=${MCP_PORT:-3000}  
      - MCP_HOST=${MCP_HOST:-0.0.0.0}
      - MCP_CORS_ORIGIN=${MCP_CORS_ORIGIN:-*}
      - SIMILARITY_THRESHOLD=${SIMILARITY_THRESHOLD:-0.7}
    depends_on:
      mcp-cldmemory-qdrant:
        condition: service_healthy
    networks:
      - mcp-cldmemory-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "-e", "process.exit(0)"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  mcp-cldmemory-qdrant:
    image: qdrant/qdrant:latest
    container_name: mcp-cldmemory-qdrant
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - data:/qdrant/storage
    environment:
      - QDRANT__SERVICE__HTTP_PORT=6333
      - QDRANT__SERVICE__GRPC_PORT=6334
      - QDRANT__LOG_LEVEL=${QDRANT_LOG_LEVEL:-INFO}
    networks:
      - mcp-cldmemory-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "timeout", "5", "bash", "-c", "</dev/tcp/localhost/6333"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

networks:
  mcp-cldmemory-network:
    driver: bridge

volumes:
  data: {}